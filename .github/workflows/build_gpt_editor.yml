name: Build GPT Editor

on:
  workflow_dispatch:
    inputs:
      SSH:
        description: 'SSH connection to Actions'
        required: true
        default: false
        type: boolean

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Python 2.7
        run: |
          sudo apt-get update
          sudo apt-get install -y python2
          python2 --version

      - name: Install Python2 dependencies
        run: |
          sudo apt-get install -y python-pip
          pip2 install argparse

      - name: Prepare input JSON files
        working-directory: atf-20231013-0ea67d76a/tools/dev/gpt_editor
        run: |
          mkdir -p mt798x
          echo '{"partition": "example", "size": "4MB"}' > mt798x/example.json
          echo "Created example input JSON files in mt798x/"
          ls -al mt798x

      - name: Make generate_gpt.sh executable
        working-directory: atf-20231013-0ea67d76a/tools/dev/gpt_editor
        run: |
          chmod +x generate_gpt.sh

      - name: Generate GPT binaries
        working-directory: atf-20231013-0ea67d76a/tools/dev/gpt_editor
        run: |
          set -x
          ./generate_gpt.sh
          echo "Finished running generate_gpt.sh"
          echo "Contents of gpt_output:"
          ls -al gpt_output || echo "No gpt_output directory found"

      - name: Verify gpt_output directory
        working-directory: atf-20231013-0ea67d76a/tools/dev/gpt_editor
        run: |
          if [ ! -d "./gpt_output" ]; then
            echo "Build failed: gpt_output directory not found!"
            exit 1
          fi
          echo "Generated GPT binaries:"
          ls -al gpt_output

      - name: Create gpt_output.zip with date
        working-directory: atf-20231013-0ea67d76a/tools/dev/gpt_editor
        run: |
          ZIP_NAME="gpt_output_$(date +%Y%m%d).zip"
          zip -r $ZIP_NAME gpt_output
          echo "ZIP_NAME=$ZIP_NAME" >> $GITHUB_ENV
          echo "$ZIP_NAME created"
          ls -al $ZIP_NAME

      - name: Print current directory and files
        run: |
          echo "Current directory:"
          pwd
          echo "Files in current directory:"
          ls -al

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.sha }}-${{ github.run_id }}
          release_name: "GPT Binaries Release"
          body: "This release contains the generated GPT binaries."
          draft: false
          prerelease: false

      - name: Upload GPT files to release
        working-directory: atf-20231013-0ea67d76a/tools/dev/gpt_editor
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.ZIP_NAME }}
          asset_name: ${{ env.ZIP_NAME }}
          asset_content_type: application/zip
